# This file has been automatically generated on Saturday, 08. September 2018 at 23:38.
# Feel free to adjust it as needed.
import os
import datetime


# Flask Settings
DEBUG = False
TESTING = False

SERVER_NAME = "example.org"

# Prefer HTTPS over HTTP
PREFERRED_URL_SCHEME = "https"

# Don't send secure cookies over an unencrypted connection ()
SESSION_COOKIE_SECURE = True
# Don't make cookies available to JS (XSS) - browsers hide httpOnly cookies from JS
SESSION_COOKIE_HTTPONLY = True


# Database
SQLALCHEMY_DATABASE_URI = "sqlite:///c:\users\cheng.lu\desktop\todo\flask\flaskbb\ex\flaskbb.sqlite"

# This option will be removed as soon as Flask-SQLAlchemy removes it.
SQLALCHEMY_TRACK_MODIFICATIONS = False

# This will print all SQL statements
SQLALCHEMY_ECHO = False

# Security - IMPORTANT
# This is the secret key that is used for session signing.
SECRET_KEY = "db81c1ce7a1a4714ce1e5c5f9ecc72f055c8e4f0401db08a"

# You can generate the WTF_CSRF_SECRET_KEY the same way as you have
# generated the SECRET_KEY. If no WTF_CSRF_SECRET_KEY is provided, it will
# use the SECRET_KEY.
WTF_CSRF_ENABLED = True
WTF_CSRF_SECRET_KEY = "c59d2e84f593c98493b233355e898f04bdf497c1b88bd08f"

# Auth
# ------------------------------
LOGIN_VIEW = "auth.login"
REAUTH_VIEW = "auth.reauth"
LOGIN_MESSAGE_CATEGORY = "info"
REFRESH_MESSAGE_CATEGORY = "info"

# The name of the cookie to store the Remember Me information in.
REMEMBER_COOKIE_NAME = "remember_token"
# The amount of time before the cookie expires, as a datetime.timedelta object.
# Default: 365 days (1 non-leap Gregorian year)
REMEMBER_COOKIE_DURATION = datetime.timedelta(days=365)
# If the Remember Me cookie should cross domains,
# set the domain value here (i.e. .example.com would allow the cookie
# to be used on all subdomains of example.com).
REMEMBER_COOKIE_DOMAIN = None
# Limits the Remember Me cookie to a certain path.
REMEMBER_COOKIE_PATH = "/"
# Restricts the Remember Me cookies scope to secure channels (typically HTTPS).
REMEMBER_COOKIE_SECURE = True
# Prevents the Remember Me cookie from being accessed by client-side scripts.
REMEMBER_COOKIE_HTTPONLY = True


# Full-Text-Search
# ------------------------------
# This will use the "whoosh_index" directory to store the search indexes
WHOOSHEE_DIR = os.path.join(DefaultConfig.basedir, "whoosh_index", DefaultConfig.py_version)
# How long should whooshee try to acquire write lock? (defaults to 2)
WHOOSHEE_WRITER_TIMEOUT = 2
# Minimum number of characters for the search (defaults to 3)
WHOOSHEE_MIN_STRING_LEN = 3


# Redis
# ------------------------------
# If redis is enabled, it can be used for:
#   - Sending non blocking emails via Celery (Task Queue)
#   - Caching
#   - Rate Limiting
REDIS_ENABLED = False
REDIS_URL = ""
REDIS_DATABASE = 0


# Celery
# ------------------------------
CELERY_BROKER_URL = ""
CELERY_RESULT_BACKEND = ""


RATELIMIT_STORAGE_URL = "memory://"

# Caching
# ------------------------------
# For all available caching types, have a look at the Flask-Cache docs
# https://pythonhosted.org/Flask-Caching/#configuring-flask-caching
CACHE_TYPE = "simple"
CACHE_DEFAULT_TIMEOUT = 60


# Mail
# ------------------------------
#MAIL_SERVER = "smtp.gmail.com"
#MAIL_PORT = 587
#MAIL_USE_TLS = True
#MAIL_USE_SSL = True
#MAIL_USERNAME = "your_username@gmail.com"
#MAIL_PASSWORD = "your_password"
#MAIL_DEFAULT_SENDER = ("Your Name", "your_username@gmail.com")

# Local SMTP Server
MAIL_SERVER = "localhost"
MAIL_PORT = 25
MAIL_USE_SSL = False
MAIL_USE_TLS = False
MAIL_USERNAME = "cheng.lu"
MAIL_PASSWORD = "123456"
MAIL_DEFAULT_SENDER = ("chenglu", "cheng.lu@united-imaging.com")
# Where to logger should send the emails to
ADMINS = ["cheng.lu@united-imaging.com"]


# Logging Settings
# ------------------------------

# Logging Config Path
# If set to a file path, this should be an absolute file path

LOG_CONF_FILE = None


# Path to store the INFO and ERROR logs
# If set to a file path, this should be an absolute path
LOG_PATH = os.path.join(DefaultConfig.basedir, 'logs')

# Lucheng Settings
# ------------------------------ #
# URL Prefixes
FORUM_URL_PREFIX = ""
USER_URL_PREFIX = "/user"
MESSAGE_URL_PREFIX = "/message"
AUTH_URL_PREFIX = "/auth"
ADMIN_URL_PREFIX = "/admin"
# Remove dead plugins - useful if you want to migrate your instance
# somewhere else and forgot to reinstall the plugins.
# If set to `False` it will NOT remove plugins that are NOT installed on
# the filesystem (virtualenv, site-packages).
REMOVE_DEAD_PLUGINS = False